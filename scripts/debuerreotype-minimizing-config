#!/usr/bin/env bash
set -Eeuo pipefail

thisDir="$(dirname "$(readlink -f "$BASH_SOURCE")")"
featureDir="$thisDir/../features"
source "$thisDir/.constants.sh" \
	--flags 'features:' \
	-- \
	'<target-dir>' \
	'rootfs'

eval "$dgetopt"
features=
while true; do
	flag="$1"; shift
	dgetopt-case "$flag"
	case "$flag" in
		--features) features="${features:+$features,}$1"; shift ;;
		--) break ;;
		*) eusage "unknown flag '$flag'" ;;
	esac
done

targetDir="${1:-}"; shift || eusage 'missing target-dir'
[ -n "$targetDir" ]

aptVersion="$("$thisDir/.apt-version.sh" "$targetDir")"

[ "$features" = "full" ] && features=$(ls $featureDir | paste -sd, -)
for i in $(echo "none,$features" | tr ',' ' ' | sort -u); do
	if [ -d $featureDir/$i/copy ]; then
		out=$(tar -cC $featureDir/$i/copy . | tar -xvC $targetDir 2>&1 | grep -v "^./$" | paste -sd' '  -)
		echo "copying from $i: $out"
	fi

	if [ -f $featureDir/$i/delete.list ]; then
		echo "deleting from $i: $(cat $featureDir/$i/delete.list | paste -sd' '  -)"
		for j in $(cat $featureDir/$i/delete.list); do
			rm -f $targetDir$j
		done
	fi
	
	if [ -f $featureDir/$i/configure.sh ]; then
		$thisDir/debuerreotype-chroot "$targetDir" bash -c "$(cat $featureDir/$i/configure.sh)"
	fi
done

# https://github.com/docker/docker/blob/d6f4fe9e38b60f63e429fff7ffced9c26cbf8236/contrib/mkimage/debootstrap#L63-L177

# prevent init scripts from running during install/update
#cat > "$targetDir/usr/sbin/policy-rc.d" <<-'EOF'
	#!/bin/sh
#	exit 101
#EOF
#chmod 0755 "$targetDir/usr/sbin/policy-rc.d"

# prevent upstart scripts from running during install/update (but only if the "upstart" package exists)
#if "$thisDir/debuerreotype-chroot" "$targetDir" apt-get install -qq -s upstart &> /dev/null; then
#	"$thisDir/debuerreotype-chroot" "$targetDir" dpkg-divert --local --rename --add /sbin/initctl > /dev/null
#	cp -a "$targetDir/usr/sbin/policy-rc.d" "$targetDir/sbin/initctl"
#	sed -i 's/^exit.*/exit 0/' "$targetDir/sbin/initctl"
#fi

